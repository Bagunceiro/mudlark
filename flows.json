[
    {
        "id": "1043bc82.023773",
        "type": "tab",
        "label": "Punkatoo logger",
        "disabled": false,
        "info": ""
    },
    {
        "id": "38484eb3.47cc42",
        "type": "tab",
        "label": "Weather data upload",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8fed5dbd7a3020a5",
        "type": "tab",
        "label": "Insight",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "12a1cdf307de99cc",
        "type": "tab",
        "label": "Fan Control",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a1642da57a265379",
        "type": "tab",
        "label": "Insight ESP8266 control",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "90638a9de11f6bba",
        "type": "tab",
        "label": "Front panel",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "29ec077e.ab0b58",
        "type": "mqtt-broker",
        "name": "MQTT",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "47afc2b6.fa0f5c",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "weather",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "e962ebd5015b4597",
        "type": "serial-port",
        "serialport": "/dev/serial0",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "21cdba4a.be7146",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mudlark.local",
        "port": "1883",
        "clientid": "ESPNOW",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "49744f72ed5ac107",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "2bcab409.9d6d9c",
        "type": "mqtt in",
        "z": "1043bc82.023773",
        "name": "",
        "topic": "home/+/event/log",
        "qos": "2",
        "datatype": "json",
        "broker": "29ec077e.ab0b58",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 100,
        "y": 180,
        "wires": [
            [
                "faa9d732.bc4b68"
            ]
        ]
    },
    {
        "id": "1805e7d.e566a18",
        "type": "file",
        "z": "1043bc82.023773",
        "name": "Write to log",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 990,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "76e76f1a.98c4f",
        "type": "function",
        "z": "1043bc82.023773",
        "name": "Format log entry",
        "func": "var tpc = msg.topic;\nvar i = tpc.indexOf(\"/\");\nvar f = tpc.substr(i+1);\ni = f.indexOf(\"/\");\nmsg.filename = \"/var/log/punkatoo/\" + f.substr(0,i) + \".log\"\n\nmsg.payload = msg.payload.ts.timestamp + \" \" + msg.payload.serial + \" \" + msg.payload.text;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 180,
        "wires": [
            [
                "1805e7d.e566a18"
            ]
        ]
    },
    {
        "id": "e6feb17a.62e9b",
        "type": "moment",
        "z": "1043bc82.023773",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "America/Sao_Paulo",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD HH:mm:ss.SSS*",
        "locale": "en-GB",
        "output": "payload.ts.timestamp",
        "outputType": "msg",
        "outTz": "America/Sao_Paulo",
        "x": 520,
        "y": 260,
        "wires": [
            [
                "76e76f1a.98c4f"
            ]
        ]
    },
    {
        "id": "faa9d732.bc4b68",
        "type": "switch",
        "z": "1043bc82.023773",
        "name": "",
        "property": "payload.ts.valid",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "76e76f1a.98c4f"
            ],
            [
                "e6feb17a.62e9b"
            ]
        ]
    },
    {
        "id": "e5538d90.b4414",
        "type": "mqtt in",
        "z": "38484eb3.47cc42",
        "name": "",
        "topic": "home/weather",
        "qos": "2",
        "datatype": "json",
        "broker": "29ec077e.ab0b58",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 400,
        "wires": [
            [
                "d886aeff.b059a",
                "d9f808a1778236f6",
                "c7f167505c7bcfe8"
            ]
        ]
    },
    {
        "id": "d886aeff.b059a",
        "type": "influxdb out",
        "z": "38484eb3.47cc42",
        "influxdb": "47afc2b6.fa0f5c",
        "name": "Weather DB",
        "measurement": "weather",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 630,
        "y": 360,
        "wires": []
    },
    {
        "id": "d9f808a1778236f6",
        "type": "trigger",
        "z": "38484eb3.47cc42",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 410,
        "y": 480,
        "wires": [
            [],
            [
                "ca98e1679ac76227"
            ]
        ]
    },
    {
        "id": "d5e2ed9298efcb03",
        "type": "mqtt out",
        "z": "38484eb3.47cc42",
        "name": "",
        "topic": "home/weather/status",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "21cdba4a.be7146",
        "x": 980,
        "y": 460,
        "wires": []
    },
    {
        "id": "ca98e1679ac76227",
        "type": "change",
        "z": "38484eb3.47cc42",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 500,
        "wires": [
            [
                "d5e2ed9298efcb03"
            ]
        ]
    },
    {
        "id": "c7f167505c7bcfe8",
        "type": "change",
        "z": "38484eb3.47cc42",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 440,
        "wires": [
            [
                "d5e2ed9298efcb03"
            ]
        ]
    },
    {
        "id": "bdddeccaef140745",
        "type": "serial in",
        "z": "8fed5dbd7a3020a5",
        "name": "From insight",
        "serial": "e962ebd5015b4597",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "c6104903054d6eef",
                "f4be138460fcbf6a"
            ]
        ]
    },
    {
        "id": "8c602f8bed0a68e0",
        "type": "serial out",
        "z": "8fed5dbd7a3020a5",
        "name": "To insight",
        "serial": "e962ebd5015b4597",
        "x": 1140,
        "y": 460,
        "wires": []
    },
    {
        "id": "6c6aed77501c71c5",
        "type": "mqtt in",
        "z": "8fed5dbd7a3020a5",
        "name": "Subscribe",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "21cdba4a.be7146",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 920,
        "y": 520,
        "wires": [
            [
                "8c602f8bed0a68e0"
            ]
        ]
    },
    {
        "id": "26c7c1f038d3d365",
        "type": "switch",
        "z": "8fed5dbd7a3020a5",
        "name": "Choose Action",
        "property": "op",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sub",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pub",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "log",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 420,
        "y": 540,
        "wires": [
            [
                "a5b005c2adaaaa66",
                "285afb0ce9fb6eb5"
            ],
            [
                "285afb0ce9fb6eb5",
                "8c06d93b1635976e"
            ],
            [
                "e23c45e4008c7f3d"
            ],
            [
                "0943f5c3ba610d6d"
            ]
        ]
    },
    {
        "id": "8c06d93b1635976e",
        "type": "mqtt out",
        "z": "8fed5dbd7a3020a5",
        "name": "Publish",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "21cdba4a.be7146",
        "x": 920,
        "y": 580,
        "wires": []
    },
    {
        "id": "c6104903054d6eef",
        "type": "json",
        "z": "8fed5dbd7a3020a5",
        "name": "Parse P2P layer",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 160,
        "y": 240,
        "wires": [
            [
                "33b0cad66f059925"
            ]
        ]
    },
    {
        "id": "573a4a016a8bf824",
        "type": "catch",
        "z": "8fed5dbd7a3020a5",
        "name": "P2P JSON error",
        "scope": [
            "c6104903054d6eef"
        ],
        "uncaught": false,
        "x": 600,
        "y": 100,
        "wires": [
            [
                "26e403f14a2e2085"
            ]
        ]
    },
    {
        "id": "26e403f14a2e2085",
        "type": "debug",
        "z": "8fed5dbd7a3020a5",
        "name": "Insight JSON Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 100,
        "wires": []
    },
    {
        "id": "3fc3bf63bc1213b4",
        "type": "json",
        "z": "8fed5dbd7a3020a5",
        "name": "Parse E2E layer",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 220,
        "y": 360,
        "wires": [
            [
                "6278633fb8c744cb"
            ]
        ]
    },
    {
        "id": "6278633fb8c744cb",
        "type": "change",
        "z": "8fed5dbd7a3020a5",
        "name": "Flatten object",
        "rules": [
            {
                "t": "move",
                "p": "payload.data.tim",
                "pt": "msg",
                "to": "tim",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.data.sn",
                "pt": "msg",
                "to": "sn",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.data.op",
                "pt": "msg",
                "to": "op",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.data.topic",
                "pt": "msg",
                "to": "topic",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.data.retain",
                "pt": "msg",
                "to": "retain",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.sender",
                "pt": "msg",
                "to": "sender",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.data.qos",
                "pt": "msg",
                "to": "qos",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.data.mesg",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 440,
        "wires": [
            [
                "26c7c1f038d3d365"
            ]
        ]
    },
    {
        "id": "a5b005c2adaaaa66",
        "type": "change",
        "z": "8fed5dbd7a3020a5",
        "name": "action=subscribe",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "subscribe",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 520,
        "wires": [
            [
                "6c6aed77501c71c5"
            ]
        ]
    },
    {
        "id": "285afb0ce9fb6eb5",
        "type": "change",
        "z": "8fed5dbd7a3020a5",
        "name": "Create ACK",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "move",
                "p": "sender",
                "pt": "msg",
                "to": "payload.recipient",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "sn",
                "pt": "msg",
                "to": "payload.data.sn",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.data.op",
                "pt": "msg",
                "to": "ACK",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.data.timestamp",
                "pt": "msg",
                "to": "$moment().local().format()",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "op",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 280,
        "wires": [
            [
                "dc8ae3d8416a5e94"
            ]
        ]
    },
    {
        "id": "10d5735be7566eb7",
        "type": "json",
        "z": "8fed5dbd7a3020a5",
        "name": "Serialize P2P layer",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1130,
        "y": 280,
        "wires": [
            [
                "7c0394681d70339a"
            ]
        ]
    },
    {
        "id": "8533946e0b1120bb",
        "type": "file",
        "z": "8fed5dbd7a3020a5",
        "name": "",
        "filename": "/var/log/insight/insight.log",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1190,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "e23c45e4008c7f3d",
        "type": "moment",
        "z": "8fed5dbd7a3020a5",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "America/Sao_Paulo",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD HH:mm:ss.SSS",
        "locale": "en-GB",
        "output": "ts",
        "outputType": "msg",
        "outTz": "America/Sao_Paulo",
        "x": 780,
        "y": 660,
        "wires": [
            [
                "1df8373a882991e9"
            ]
        ]
    },
    {
        "id": "1df8373a882991e9",
        "type": "function",
        "z": "8fed5dbd7a3020a5",
        "name": "Add timestamp to log mesage",
        "func": "msg.payload = msg.ts + \" \" + msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 740,
        "wires": [
            [
                "8533946e0b1120bb"
            ]
        ]
    },
    {
        "id": "7c0394681d70339a",
        "type": "function",
        "z": "8fed5dbd7a3020a5",
        "name": "Add newline",
        "func": "msg.payload = msg.payload + '\\n';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 400,
        "wires": [
            [
                "8c602f8bed0a68e0"
            ]
        ]
    },
    {
        "id": "dc8ae3d8416a5e94",
        "type": "json",
        "z": "8fed5dbd7a3020a5",
        "name": "Serialize E2E layer",
        "property": "payload.data",
        "action": "str",
        "pretty": false,
        "x": 890,
        "y": 280,
        "wires": [
            [
                "10d5735be7566eb7"
            ]
        ]
    },
    {
        "id": "459e5f800ce578c4",
        "type": "catch",
        "z": "8fed5dbd7a3020a5",
        "name": "E2E JSON error",
        "scope": [
            "3fc3bf63bc1213b4"
        ],
        "uncaught": false,
        "x": 600,
        "y": 180,
        "wires": [
            [
                "bfd433d3e34948c4"
            ]
        ]
    },
    {
        "id": "bfd433d3e34948c4",
        "type": "debug",
        "z": "8fed5dbd7a3020a5",
        "name": "Client JSON Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.data",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 180,
        "wires": []
    },
    {
        "id": "f4be138460fcbf6a",
        "type": "debug",
        "z": "8fed5dbd7a3020a5",
        "d": true,
        "name": "Message from insight",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 100,
        "wires": []
    },
    {
        "id": "0943f5c3ba610d6d",
        "type": "function",
        "z": "8fed5dbd7a3020a5",
        "name": "Format error message",
        "func": "msg.payload = \"Unknown Operation: \" + msg.op;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 660,
        "wires": [
            [
                "e23c45e4008c7f3d"
            ]
        ]
    },
    {
        "id": "e8ed524e87de351a",
        "type": "debug",
        "z": "8fed5dbd7a3020a5",
        "name": "Non \"rcvd\" message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 280,
        "wires": []
    },
    {
        "id": "33b0cad66f059925",
        "type": "switch",
        "z": "8fed5dbd7a3020a5",
        "name": "",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "rcvd",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 300,
        "wires": [
            [
                "3fc3bf63bc1213b4",
                "a9d2d3a565f33788"
            ],
            [
                "e8ed524e87de351a"
            ]
        ]
    },
    {
        "id": "a9d2d3a565f33788",
        "type": "debug",
        "z": "8fed5dbd7a3020a5",
        "name": "Data Rcvd",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 200,
        "wires": []
    },
    {
        "id": "caccefe476e8d570",
        "type": "rpi-gpio out",
        "z": "12a1cdf307de99cc",
        "name": "FAN",
        "pin": "18",
        "set": "",
        "level": "0",
        "freq": "100",
        "out": "pwm",
        "bcm": true,
        "x": 1150,
        "y": 680,
        "wires": []
    },
    {
        "id": "e94c80d8f4c6081a",
        "type": "inject",
        "z": "12a1cdf307de99cc",
        "name": "Interval timer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "ec622016fce21f21"
            ]
        ]
    },
    {
        "id": "f8d5eb96f40fa3e2",
        "type": "debug",
        "z": "12a1cdf307de99cc",
        "d": true,
        "name": "Temperature read",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 160,
        "wires": []
    },
    {
        "id": "0c9f83d605cd6f40",
        "type": "json",
        "z": "12a1cdf307de99cc",
        "name": "Convert to obj",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 260,
        "y": 300,
        "wires": [
            [
                "f8d5eb96f40fa3e2",
                "038d57a91fe3d9bb"
            ]
        ]
    },
    {
        "id": "ec622016fce21f21",
        "type": "file in",
        "z": "12a1cdf307de99cc",
        "name": "Get CPU temp",
        "filename": "/sys/class/thermal/thermal_zone0/temp",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 200,
        "y": 220,
        "wires": [
            [
                "0c9f83d605cd6f40"
            ]
        ]
    },
    {
        "id": "038d57a91fe3d9bb",
        "type": "switch",
        "z": "12a1cdf307de99cc",
        "name": "Determine reqd speed",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "57999",
                "vt": "num"
            },
            {
                "t": "btwn",
                "v": "58000",
                "vt": "num",
                "v2": "61999",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "62000",
                "vt": "num",
                "v2": "64999",
                "v2t": "num"
            },
            {
                "t": "gt",
                "v": "65000",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 340,
        "y": 420,
        "wires": [
            [
                "9d6139d1adb2379a"
            ],
            [
                "d3847822e570e45d"
            ],
            [
                "f96d5ee929d0c406"
            ],
            [
                "f5b235a290394caf"
            ]
        ]
    },
    {
        "id": "9d6139d1adb2379a",
        "type": "change",
        "z": "12a1cdf307de99cc",
        "name": "Fan off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 340,
        "wires": [
            [
                "754c44d8e846411f"
            ]
        ]
    },
    {
        "id": "d3847822e570e45d",
        "type": "change",
        "z": "12a1cdf307de99cc",
        "name": "Slow",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "40",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 400,
        "wires": [
            [
                "754c44d8e846411f"
            ]
        ]
    },
    {
        "id": "f96d5ee929d0c406",
        "type": "change",
        "z": "12a1cdf307de99cc",
        "name": "Medium",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "75",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 460,
        "wires": [
            [
                "754c44d8e846411f"
            ]
        ]
    },
    {
        "id": "f5b235a290394caf",
        "type": "change",
        "z": "12a1cdf307de99cc",
        "name": "Fast",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "100",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 520,
        "wires": [
            [
                "754c44d8e846411f"
            ]
        ]
    },
    {
        "id": "754c44d8e846411f",
        "type": "switch",
        "z": "12a1cdf307de99cc",
        "name": "Change of speed?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "lastValue",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 830,
        "y": 420,
        "wires": [
            [
                "e25684dda2de7358"
            ]
        ]
    },
    {
        "id": "e25684dda2de7358",
        "type": "change",
        "z": "12a1cdf307de99cc",
        "name": "Record change of speed",
        "rules": [
            {
                "t": "set",
                "p": "lastValue",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "lastSetTime",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 640,
        "wires": [
            [
                "caccefe476e8d570",
                "f592632ef3a89408"
            ]
        ]
    },
    {
        "id": "f592632ef3a89408",
        "type": "debug",
        "z": "12a1cdf307de99cc",
        "d": true,
        "name": "Fan speed change",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 580,
        "wires": []
    },
    {
        "id": "78643579bc8ecb68",
        "type": "inject",
        "z": "12a1cdf307de99cc",
        "name": "Initialise context data and switch fan off",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 240,
        "y": 640,
        "wires": [
            [
                "e25684dda2de7358"
            ]
        ]
    },
    {
        "id": "ad95f3f3952c5cc8",
        "type": "rpi-gpio out",
        "z": "a1642da57a265379",
        "name": "EN",
        "pin": "24",
        "set": true,
        "level": "1",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 910,
        "y": 760,
        "wires": []
    },
    {
        "id": "d097bcc378255a26",
        "type": "rpi-gpio out",
        "z": "a1642da57a265379",
        "name": "~RES",
        "pin": "23",
        "set": true,
        "level": "1",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 1370,
        "y": 340,
        "wires": []
    },
    {
        "id": "faacb7716f5b0743",
        "type": "rpi-gpio out",
        "z": "a1642da57a265379",
        "name": "FLASH",
        "pin": "17",
        "set": true,
        "level": "1",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 1420,
        "y": 620,
        "wires": []
    },
    {
        "id": "3fec2ca6e6b40931",
        "type": "delay",
        "z": "a1642da57a265379",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 930,
        "y": 400,
        "wires": [
            [
                "f803b415cba477f8"
            ]
        ]
    },
    {
        "id": "f803b415cba477f8",
        "type": "change",
        "z": "a1642da57a265379",
        "name": "Reset to HIGH",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 400,
        "wires": [
            [
                "d097bcc378255a26"
            ]
        ]
    },
    {
        "id": "fb6595d3ea37c9f6",
        "type": "inject",
        "z": "a1642da57a265379",
        "name": "Enable",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 210,
        "y": 720,
        "wires": [
            [
                "ad95f3f3952c5cc8"
            ]
        ]
    },
    {
        "id": "34d5588e3aaddb9f",
        "type": "inject",
        "z": "a1642da57a265379",
        "name": "Disable",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 210,
        "y": 800,
        "wires": [
            [
                "ad95f3f3952c5cc8"
            ]
        ]
    },
    {
        "id": "d1c85d780b14cccb",
        "type": "inject",
        "z": "a1642da57a265379",
        "name": "Set Program Mode",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 170,
        "y": 580,
        "wires": [
            [
                "7a7fc95b86326127"
            ]
        ]
    },
    {
        "id": "e4e306bbfcd51fe2",
        "type": "delay",
        "z": "a1642da57a265379",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 770,
        "y": 540,
        "wires": [
            [
                "a80e9c6c3fe96b07",
                "857cfbae3e1b452e"
            ]
        ]
    },
    {
        "id": "a80e9c6c3fe96b07",
        "type": "change",
        "z": "a1642da57a265379",
        "name": "Reset to LOW",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 340,
        "wires": [
            [
                "d097bcc378255a26",
                "3fec2ca6e6b40931"
            ]
        ]
    },
    {
        "id": "5bb580019979608a",
        "type": "inject",
        "z": "a1642da57a265379",
        "name": "Reset",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "a80e9c6c3fe96b07"
            ]
        ]
    },
    {
        "id": "857cfbae3e1b452e",
        "type": "delay",
        "z": "a1642da57a265379",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1000,
        "y": 540,
        "wires": [
            [
                "27eaf723a5481708"
            ]
        ]
    },
    {
        "id": "27eaf723a5481708",
        "type": "change",
        "z": "a1642da57a265379",
        "name": "Flash to HIGH",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 540,
        "wires": [
            [
                "faacb7716f5b0743"
            ]
        ]
    },
    {
        "id": "af28130ec16e6855",
        "type": "change",
        "z": "a1642da57a265379",
        "name": "Flash to LOW",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 620,
        "wires": [
            [
                "faacb7716f5b0743"
            ]
        ]
    },
    {
        "id": "84c008505c8f7272",
        "type": "function",
        "z": "a1642da57a265379",
        "name": "Strip newline",
        "func": "msg.payload = msg.payload.trim();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 120,
        "wires": [
            [
                "449bc26f3d578fb9"
            ]
        ]
    },
    {
        "id": "449bc26f3d578fb9",
        "type": "switch",
        "z": "a1642da57a265379",
        "name": "Choose operation",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "prog",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 240,
        "wires": [
            [
                "9e129ae85c16a129",
                "a80e9c6c3fe96b07"
            ],
            [
                "622b8d3eed07333f",
                "7a7fc95b86326127"
            ]
        ]
    },
    {
        "id": "9e129ae85c16a129",
        "type": "debug",
        "z": "a1642da57a265379",
        "d": true,
        "name": "res",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 140,
        "wires": []
    },
    {
        "id": "622b8d3eed07333f",
        "type": "debug",
        "z": "a1642da57a265379",
        "d": true,
        "name": "prog",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 220,
        "wires": []
    },
    {
        "id": "d736a23eea7c6781",
        "type": "mqtt in",
        "z": "a1642da57a265379",
        "name": "MQTT sub - mudlark/espnow",
        "topic": "mudlark/espnow",
        "qos": "2",
        "datatype": "auto",
        "broker": "21cdba4a.be7146",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 40,
        "wires": [
            [
                "84c008505c8f7272"
            ]
        ]
    },
    {
        "id": "7a7fc95b86326127",
        "type": "change",
        "z": "a1642da57a265379",
        "name": "NOP",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 580,
        "wires": [
            [
                "e4e306bbfcd51fe2",
                "af28130ec16e6855"
            ]
        ]
    },
    {
        "id": "7a645dddc77fd063",
        "type": "rpi-gpio in",
        "z": "90638a9de11f6bba",
        "name": "Reset",
        "pin": "4",
        "intype": "up",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 0,
        "y": 0,
        "wires": [
            [
                "7d886d2e13a846ca"
            ]
        ]
    },
    {
        "id": "7d886d2e13a846ca",
        "type": "switch",
        "z": "90638a9de11f6bba",
        "name": "Press/Release",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 0,
        "y": 0,
        "wires": [
            [
                "c97d44a4150c5d25"
            ],
            [
                "8a8802dbbfcd6fb6",
                "ec788d3d68cc6425"
            ]
        ]
    },
    {
        "id": "c97d44a4150c5d25",
        "type": "function",
        "z": "90638a9de11f6bba",
        "name": "Record start of press",
        "func": "\nvar nowDate = new Date().valueOf();\n\nflow.set('start', nowDate);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 280,
        "wires": [
            [
                "df4f49ede9d891db"
            ]
        ]
    },
    {
        "id": "8a8802dbbfcd6fb6",
        "type": "function",
        "z": "90638a9de11f6bba",
        "name": "Measure length of press",
        "func": "\nvar nowDate = new Date().valueOf();\n\n// var thenDate = flow.get('start');\n// msg.delay = nowDate - thenDate;\n\n\nmsg.presslen = nowDate - flow.get('start');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 500,
        "wires": [
            [
                "c49b90a5a8290219",
                "df4f49ede9d891db"
            ]
        ]
    },
    {
        "id": "c49b90a5a8290219",
        "type": "switch",
        "z": "90638a9de11f6bba",
        "name": "Choose action",
        "property": "presslen",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "1000",
                "vt": "num",
                "v2": "3000",
                "v2t": "num"
            },
            {
                "t": "gt",
                "v": "3000",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 600,
        "y": 660,
        "wires": [
            [
                "2fa41de48f61ca26"
            ],
            [
                "8be88e0643f2ffc0"
            ]
        ]
    },
    {
        "id": "df4f49ede9d891db",
        "type": "trigger",
        "z": "90638a9de11f6bba",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "1",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 460,
        "y": 340,
        "wires": [
            [
                "77c5c4eafd13a201"
            ]
        ]
    },
    {
        "id": "9016999b386a26a5",
        "type": "function",
        "z": "90638a9de11f6bba",
        "name": "colourNameToCode",
        "func": "var name = msg.payload;\n\nvar code = -1;\n\nswitch (name)\n{\n    case 'black': code = 0; break;\n    case 'blue': code = 1; break;\n    case 'green': code = 2; break;\n    case 'cyan': code = 3; break;\n    case 'red': code = 4; break;\n    case 'magenta': code = 5; break;\n    case 'yellow': code = 6; break;\n    case 'white': code = 7; break;\n} \n\nmsg.payload = code;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1060,
        "wires": [
            [
                "9bae061b52880d00"
            ]
        ]
    },
    {
        "id": "9bae061b52880d00",
        "type": "function",
        "z": "90638a9de11f6bba",
        "name": "",
        "func": "var rMsg = {'payload': -1};\nvar gMsg = {'payload': -1};\nvar bMsg = {'payload': -1};\n\nif (msg.payload != flow.get('colour'))\n{\n    flow.set('colour', msg.payload);\n\n    rMsg.payload = (((msg.payload & 4) != 0) ? 0 : 1);\n    gMsg.payload = (((msg.payload & 2) != 0) ? 0 : 1);\n    bMsg.payload = (((msg.payload & 1) != 0) ? 0 : 1);\n}\n\nreturn [rMsg, gMsg, bMsg];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 980,
        "wires": [
            [
                "5dbbbd4d95b11993"
            ],
            [
                "37723e629e7b2f7d"
            ],
            [
                "d859a48841d320d1"
            ]
        ]
    },
    {
        "id": "5dbbbd4d95b11993",
        "type": "switch",
        "z": "90638a9de11f6bba",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1050,
        "y": 920,
        "wires": [
            [
                "2ef5a6822245fe97"
            ]
        ]
    },
    {
        "id": "37723e629e7b2f7d",
        "type": "switch",
        "z": "90638a9de11f6bba",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1050,
        "y": 980,
        "wires": [
            [
                "6a9dec075c4639ec"
            ]
        ]
    },
    {
        "id": "d859a48841d320d1",
        "type": "switch",
        "z": "90638a9de11f6bba",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1050,
        "y": 1040,
        "wires": [
            [
                "068df11ff3f9e265"
            ]
        ]
    },
    {
        "id": "ecd0f0a074b68605",
        "type": "switch",
        "z": "90638a9de11f6bba",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "number",
                "vt": "number"
            },
            {
                "t": "istype",
                "v": "string",
                "vt": "string"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 980,
        "wires": [
            [
                "9bae061b52880d00"
            ],
            [
                "9016999b386a26a5"
            ]
        ]
    },
    {
        "id": "5afe21b517c2bf07",
        "type": "switch",
        "z": "90638a9de11f6bba",
        "name": "",
        "property": "presslen",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "1000",
                "vt": "num"
            },
            {
                "t": "btwn",
                "v": "1000",
                "vt": "num",
                "v2": "3000",
                "v2t": "num"
            },
            {
                "t": "gt",
                "v": "3000",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 870,
        "y": 400,
        "wires": [
            [
                "053e6992c64002c6"
            ],
            [
                "37695dfa68a3a2e5"
            ],
            [
                "f96da016303c9892"
            ]
        ]
    },
    {
        "id": "053e6992c64002c6",
        "type": "change",
        "z": "90638a9de11f6bba",
        "name": "LED off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "black",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 340,
        "wires": [
            [
                "732dbeb5e4edb04a"
            ]
        ]
    },
    {
        "id": "37695dfa68a3a2e5",
        "type": "change",
        "z": "90638a9de11f6bba",
        "name": "LED to Blue",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "blue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 400,
        "wires": [
            [
                "732dbeb5e4edb04a"
            ]
        ]
    },
    {
        "id": "f96da016303c9892",
        "type": "change",
        "z": "90638a9de11f6bba",
        "name": "LED to Red",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "red",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 460,
        "wires": [
            [
                "732dbeb5e4edb04a"
            ]
        ]
    },
    {
        "id": "77c5c4eafd13a201",
        "type": "function",
        "z": "90638a9de11f6bba",
        "name": "Measure length of press",
        "func": "\nvar nowDate = new Date().valueOf();\n\n// var thenDate = flow.get('start');\n// msg.delay = nowDate - thenDate;\n\n\nmsg.presslen = nowDate - flow.get('start');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 400,
        "wires": [
            [
                "5afe21b517c2bf07"
            ]
        ]
    },
    {
        "id": "2ef5a6822245fe97",
        "type": "rpi-gpio out",
        "z": "90638a9de11f6bba",
        "name": "R",
        "pin": "21",
        "set": true,
        "level": "1",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 1230,
        "y": 920,
        "wires": []
    },
    {
        "id": "6a9dec075c4639ec",
        "type": "rpi-gpio out",
        "z": "90638a9de11f6bba",
        "name": "G",
        "pin": "20",
        "set": true,
        "level": "1",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 1230,
        "y": 980,
        "wires": []
    },
    {
        "id": "068df11ff3f9e265",
        "type": "rpi-gpio out",
        "z": "90638a9de11f6bba",
        "name": "B",
        "pin": "16",
        "set": true,
        "level": "1",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 1230,
        "y": 1040,
        "wires": []
    },
    {
        "id": "ec788d3d68cc6425",
        "type": "change",
        "z": "90638a9de11f6bba",
        "name": "Reset Indicator to Off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 1060,
        "wires": [
            [
                "ecd0f0a074b68605"
            ]
        ]
    },
    {
        "id": "732dbeb5e4edb04a",
        "type": "link out",
        "z": "90638a9de11f6bba",
        "name": "Set Indicator Colour",
        "mode": "link",
        "links": [
            "b8fb9798af7b0c75"
        ],
        "x": 1390,
        "y": 400,
        "wires": [],
        "l": true
    },
    {
        "id": "b8fb9798af7b0c75",
        "type": "link in",
        "z": "90638a9de11f6bba",
        "name": "Set Indicator Colour",
        "links": [
            "021982bb4c47ccda",
            "732dbeb5e4edb04a"
        ],
        "x": 170,
        "y": 980,
        "wires": [
            [
                "ecd0f0a074b68605"
            ]
        ],
        "l": true
    },
    {
        "id": "2fa41de48f61ca26",
        "type": "exec",
        "z": "90638a9de11f6bba",
        "command": "sudo reboot",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "reboot",
        "x": 870,
        "y": 620,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "8be88e0643f2ffc0",
        "type": "exec",
        "z": "90638a9de11f6bba",
        "command": "sudo shutdown now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 920,
        "y": 700,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9bb56cbb8edb8b0a",
        "type": "inject",
        "z": "90638a9de11f6bba",
        "name": "Initialisations",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 0,
        "y": 0,
        "wires": [
            [
                "62c38e7d186f0985"
            ]
        ]
    },
    {
        "id": "62c38e7d186f0985",
        "type": "exec",
        "z": "90638a9de11f6bba",
        "command": "panelclk",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Start status monitor",
        "x": 670,
        "y": 100,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "91b220ee6a30f324",
        "type": "inject",
        "z": "90638a9de11f6bba",
        "name": "Kill Monitor",
        "props": [
            {
                "p": "kill",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 340,
        "y": 140,
        "wires": [
            [
                "62c38e7d186f0985"
            ]
        ]
    },
    {
        "id": "116d4aa9916d7b5c",
        "type": "change",
        "z": "90638a9de11f6bba",
        "name": "LED to Blue",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "blue",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "networkOK",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1180,
        "wires": [
            [
                "021982bb4c47ccda"
            ]
        ]
    },
    {
        "id": "021982bb4c47ccda",
        "type": "link out",
        "z": "90638a9de11f6bba",
        "name": "Set Indicator Colour",
        "mode": "link",
        "links": [
            "b8fb9798af7b0c75"
        ],
        "x": 1040,
        "y": 1180,
        "wires": [],
        "l": true
    },
    {
        "id": "6a4bd9717d1826f4",
        "type": "ping",
        "z": "90638a9de11f6bba",
        "protocol": "Automatic",
        "mode": "timed",
        "name": "",
        "host": "192.168.0.1",
        "timer": "10",
        "inputs": 0,
        "x": 230,
        "y": 1220,
        "wires": [
            [
                "9e7485d858dc3bdf"
            ]
        ]
    },
    {
        "id": "9e7485d858dc3bdf",
        "type": "switch",
        "z": "90638a9de11f6bba",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 1220,
        "wires": [
            [
                "116d4aa9916d7b5c"
            ],
            [
                "8d0a88c3bedc4d84"
            ]
        ]
    },
    {
        "id": "94bc83d2fbb5a4ec",
        "type": "link in",
        "z": "90638a9de11f6bba",
        "name": "Indicator off",
        "links": [
            "b8b2a8cf030755d7"
        ],
        "x": 150,
        "y": 1060,
        "wires": [
            [
                "ec788d3d68cc6425"
            ]
        ],
        "l": true
    },
    {
        "id": "b8b2a8cf030755d7",
        "type": "link out",
        "z": "90638a9de11f6bba",
        "name": "Indicator off",
        "mode": "link",
        "links": [
            "94bc83d2fbb5a4ec"
        ],
        "x": 1070,
        "y": 1300,
        "wires": [],
        "l": true
    },
    {
        "id": "8d0a88c3bedc4d84",
        "type": "switch",
        "z": "90638a9de11f6bba",
        "name": "",
        "property": "networkOK",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 1300,
        "wires": [
            [
                "8acc338cb1d6bddc"
            ]
        ]
    },
    {
        "id": "8acc338cb1d6bddc",
        "type": "change",
        "z": "90638a9de11f6bba",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "networkOK",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1300,
        "wires": [
            [
                "b8b2a8cf030755d7"
            ]
        ]
    }
]